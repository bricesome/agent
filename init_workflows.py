#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script d'initialisation des workflows de d√©monstration
"""

import json
import os
from datetime import datetime

def init_demo_workflows():
    """Initialise les workflows de d√©monstration"""
    
    # V√©rifier si le fichier workflows.json existe d√©j√†
    if os.path.exists('workflows.json'):
        print("‚ö†Ô∏è Le fichier workflows.json existe d√©j√†.")
        response = input("Voulez-vous le remplacer ? (o/n): ")
        if response.lower() not in ['o', 'oui', 'y', 'yes']:
            print("‚ùå Initialisation annul√©e.")
            return
    
    # Workflows de d√©monstration
    demo_workflows = [
        {
            "id": "workflow_support_client_demo",
            "name": "Support Client - R√©solution de Probl√®me",
            "description": "Workflow automatis√© pour la r√©solution de probl√®mes clients en 4 √©tapes",
            "type": "Support Client - R√©solution de Probl√®me",
            "steps": [
                {
                    "order": 1,
                    "name": "Classification",
                    "agent_name": "Agent Classification",
                    "type": "classification",
                    "description": "Classification automatique du probl√®me client"
                },
                {
                    "order": 2,
                    "name": "Diagnostic",
                    "agent_name": "Agent Diagnostic",
                    "type": "diagnostic",
                    "description": "Analyse approfondie et diagnostic du probl√®me"
                },
                {
                    "order": 3,
                    "name": "Solution",
                    "agent_name": "Agent Solution",
                    "type": "solution",
                    "description": "Proposition de solution adapt√©e"
                },
                {
                    "order": 4,
                    "name": "Suivi",
                    "agent_name": "Agent Suivi",
                    "type": "suivi",
                    "description": "Planification du suivi et v√©rification"
                }
            ],
            "status": "active",
            "created_at": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
            "executions": []
        },
        {
            "id": "workflow_analyse_financiere_demo",
            "name": "Analyse Financi√®re Compl√®te",
            "description": "Workflow d'analyse financi√®re en 3 √©tapes",
            "type": "Analyse Financi√®re",
            "steps": [
                {
                    "order": 1,
                    "name": "Collecte de Donn√©es",
                    "agent_name": "Agent Collecte",
                    "type": "collecte",
                    "description": "R√©cup√©ration des donn√©es financi√®res"
                },
                {
                    "order": 2,
                    "name": "Analyse",
                    "agent_name": "Agent Analyse",
                    "type": "analyse",
                    "description": "Analyse approfondie des donn√©es"
                },
                {
                    "order": 3,
                    "name": "Rapport",
                    "agent_name": "Agent Rapport",
                    "type": "rapport",
                    "description": "G√©n√©ration du rapport final"
                }
            ],
            "status": "active",
            "created_at": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
            "executions": []
        }
    ]
    
    # Sauvegarder les workflows de d√©monstration
    try:
        with open('workflows.json', 'w', encoding='utf-8') as f:
            json.dump(demo_workflows, f, ensure_ascii=False, indent=2)
        
        print("‚úÖ Workflows de d√©monstration initialis√©s avec succ√®s !")
        print(f"üìã {len(demo_workflows)} workflows cr√©√©s :")
        
        for workflow in demo_workflows:
            print(f"   üîÑ {workflow['name']} ({len(workflow['steps'])} √©tapes)")
        
        print("\nüöÄ Vous pouvez maintenant lancer l'application et tester les workflows !")
        
    except Exception as e:
        print(f"‚ùå Erreur lors de l'initialisation : {e}")

if __name__ == "__main__":
    print("üîÑ Initialisation des Workflows de D√©monstration")
    print("=" * 50)
    init_demo_workflows()
